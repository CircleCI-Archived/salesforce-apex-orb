version: 2.1

orbs:
  apex: circleci/salesforce-apex@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@9.0

parameters:
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

jobs:
  integration-test_setup:
    docker:
      - image: cimg/node:12.6
    steps:
      - apex/setup:
          defaultusername: "gabriel@circleci.cpe"

  integration-test_full:
    docker:
      - image: cimg/node:12.6
    steps:
      - run:
          name: Checkout Trailhead sample app
          command: git clone https://github.com/trailheadapps/ebikes-lwc.git ~/project
      - apex/setup:
          defaultusername: "gabriel@circleci.cpe"
      - apex/scratch-up:
          scratch-config: "./config/project-scratch-def.json"
          scratch-alias: "ebikes"
      - apex/source-push:
          organization-alias: "ebikes"
          sample-data: "./data/sample-data-plan.json"
          permset: "ebikes"
      - apex/mdapi-deploy:
          organization-alias: "ebikes"
          deploy-dir: "./mdapiDeploy/unpackaged"
      - apex/test:
          organization-alias: "ebikes"
      - apex/scratch-down:
          scratch-alias: "ebikes"


workflows:
  # This `lint-pack_validate_publish-dev` workflow will run on any commit.
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: circleci/salesforce-apex
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `integration-tests_prod-release` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # your integration test jobs go here: essentially, run all your orb's
      # jobs and commands to ensure they behave as expected. or, run other
      # integration tests of your choosing

      - integration-test_setup
      - integration-test_full

      # publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/salesforce-apex
          context: orb-publishing
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: cpe-bot
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: c1:2d:25:9b:b2:ca:1e:54:c1:ce:da:34:bb:25:ae:02
          requires:
            - integration-test_setup
            - integration-test_full
          filters:
            branches:
              only: master
